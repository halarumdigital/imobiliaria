Crie um sistema web multi-empresa completo com as seguintes especifica√ß√µes:
üèóÔ∏è Estrutura Geral

Framework: Node.js com Express
Frontend: HTML, CSS, JavaScript (ou React se preferir)
Banco de Dados: MySQL (configurado via arquivo .env)
Autentica√ß√£o: JWT com n√≠veis de acesso (Admin/Cliente)
Arquitetura: MVC com separa√ß√£o clara entre admin e cliente

üë®‚Äçüíº √ÅREA ADMINISTRATIVA
1. Menu Configura√ß√µes
javascript// Campos necess√°rios:
{
  logo: "URL/upload da imagem",
  favicon: "URL/upload do √≠cone",
  coresGlobais: {
    primaria: "#color",
    secundaria: "#color", 
    fundo: "#color"
  },
  nomeSistema: "string",
  nomeRodape: "string",
  nomeAbaNavegador: "string"
}
2. Menu Evolution API
javascript// Configura√ß√µes globais:
{
  evolutionURL: "https://api.evolution.com",
  evolutionToken: "token_global",
  estadoConexao: "conectado/desconectado",
  urlGlobalSistema: "https://meudominio.com"
}
3. Menu IA
javascript// Configura√ß√µes de IA:
{
  apiKey: "openai_api_key",
  temperatura: 0.7,
  numeroTokens: 1000,
  modeloUsado: "gpt-3.5-turbo",
  campoTeste: "√°rea para testar prompts"
}
üë§ √ÅREA DO CLIENTE
1. Menu Perfil

Formul√°rio completo de edi√ß√£o de dados pessoais/empresariais
Upload de avatar
Configura√ß√µes de conta

2. Menu WhatsApp
javascript// Funcionalidades:
{
  criarInstancia: "usar dados globais Evolution",
  configurarIA: "vincular agente IA √† inst√¢ncia",
  configurarWhatsApp: "configura√ß√µes espec√≠ficas",
  verificarStatus: "status da conex√£o",
  desconectar: "desconectar inst√¢ncia",
  excluirInstancia: "remover completamente"
}
3. Menu IA
javascript// Cria√ß√£o de Agente:
{
  nomeAgente: "string",
  temperatura: "number",
  prompt: "textarea",
  quantidadeTokens: "number",
  uploadPDF: "treinamento do agente",
  // Aba separada:
  vinculacaoInstancia: "dropdown com inst√¢ncias ativas"
}
4. Menu Conversas

Seletor de inst√¢ncia
Lista de conversas da inst√¢ncia selecionada
Visualiza√ß√£o de mensagens
Filtros e busca

üö® IMPORTANTE - CONFIGURA√á√ïES OBRIGAT√ìRIAS
Banco de Dados:

USE EXCLUSIVAMENTE MYSQL - configurado via arquivo .env
NUNCA TENTE MUDAR O BANCO DE DADOS
PADR√ÉO OBRIGAT√ìRIO: MYSQL
Configure as conex√µes usando as vari√°veis de ambiente do .env

Bibliotecas MySQL necess√°rias:
javascript// Package.json dependencies:
"mysql2": "latest",
"sequelize": "latest", // ORM recomendado
// ou
"mysql": "latest" // driver direto

üìã Requisitos T√©cnicos
Backend Requirements:

Middleware para verifica√ß√£o de n√≠veis de acesso
API RESTful para todas as opera√ß√µes
Integra√ß√£o com Evolution API
Sistema de upload de arquivos
Logs de atividades

Frontend Requirements:

Interface responsiva
Dashboard administrativo
Painel do cliente
Sistema de notifica√ß√µes
Aplica√ß√£o das cores/temas globais em tempo real

Banco de Dados MySQL:
sql-- ‚ö†Ô∏è IMPORTANTE: USE APENAS MYSQL - BANCO CONFIGURADO NO .env
-- NUNCA ALTERE O BANCO DE DADOS - PADR√ÉO √â MYSQL
-- Estrutura sugerida:
Tables: users, companies, configurations, whatsapp_instances, 
ai_agents, conversations, messages, files

-- Configura√ß√£o no .env:
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=sua_senha
DB_NAME=sistema_multiempresa
DB_PORT=3306
APIs de Integra√ß√£o:

Evolution API para WhatsApp
OpenAI API para IA
Upload de arquivos (PDFs)
Processamento de documentos

üîß Funcionalidades Espec√≠ficas

Multi-tenancy: Isolamento completo entre empresas
Configura√ß√µes Din√¢micas: Aplica√ß√£o instant√¢nea de mudan√ßas visuais
Status em Tempo Real: WebSockets para status de conex√µes
Sistema de Logs: Auditoria completa de a√ß√µes
Backup Autom√°tico: Configura√ß√µes e dados importantes

üìÅ Estrutura de Pastas Sugerida
/src
  /controllers (admin, client, auth)
  /models (database models)
  /routes (admin, client, api)
  /middleware (auth, validation)
  /views (admin, client templates)
  /public (css, js, uploads)
  /utils (helpers, integrations)
üöÄ Entreg√°veis

Sistema completamente funcional
Documenta√ß√£o da API
Instru√ß√µes de instala√ß√£o
Dados de teste/demo
Interface amig√°vel e intuitiva

Priorize a seguran√ßa, escalabilidade e uma experi√™ncia de usu√°rio fluida. O sistema deve ser facilmente configur√°vel e permitir expans√£o futura de funcionalidades.